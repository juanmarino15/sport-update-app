name: Test and Deploy to Heroku

on:
  push:
    branches:
      - main
    schedule:
      - cron: '*/5 * * * *'


jobs:
  test-database:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: sportsUpdate
          POSTGRES_PASSWORD: sportsUpdate
          POSTGRES_DB: sportsUpdate
        ports:
          - "5432:5432"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Database Tests
        run: python -m unittest database/tests/test_db.py

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run integration tests
        run: python -m unittest tests/test_integrationTest.py

      - name: Run ApiCollector tests
        run: python -m unittest DataCollector/tests/test_apiCollector.py

      - name: Run dataAnalyzer tests
        run: python -m unittest DataAnalyzer/tests/test_dataAnalyzer.py

      - name: Run webApp tests
        run: python -m unittest webApp/tests/test_webApp.py

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Heroku Container Registry
        run: docker login --username=$HEROKU_USERNAME --password=$HEROKU_API_KEY registry.heroku.com
        env:
          HEROKU_USERNAME: ${{secrets.HEROKU_USERNAME}}
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}

      - name: Set Environment Variables
        run: |
          echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV
        env:
          DATABASE_URL: ${{secrets.DATABASE_URL}}

      - name: Build and Push Docker Images
        run: |
          docker build -t registry.heroku.com/sports-update-app/web -f webApp/Dockerfile .
          docker push registry.heroku.com/sports-update-app/web
          
          docker build -t registry.heroku.com/sports-update-app/datacollector -f DataCollector/Dockerfile .
          docker push registry.heroku.com/sports-update-app/datacollector
          
          docker build -t registry.heroku.com/sports-update-app/dataanalyzer -f DataAnalyzer/Dockerfile .
          docker push registry.heroku.com/sports-update-app/dataanalyzer

      - name: Release Images to Heroku
        run: |
          heroku container:release web datacollector dataanalyzer -a sports-update-app
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}

      - name: Build and Push Prometheus Docker Image
        run: |
          docker build -t registry.heroku.com/sports-update-app/prometheus -f prometheus/Dockerfile.prometheus .
          docker push registry.heroku.com/sports-update-app/prometheus

      - name: Release Prometheus Image to Heroku
        run: |
          heroku container:release prometheus -a sports-update-app
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}

      - name: Initialize Database
        run: heroku run python initialize_db.py --app sports-update-app

  scheduled-api-collector:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Heroku Container Registry
        run: docker login --username=$HEROKU_USERNAME --password=$HEROKU_API_KEY registry.heroku.com
        env:
          HEROKU_USERNAME: ${{secrets.HEROKU_USERNAME}}
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}

      - name: Set Environment Variables
        run: |
          echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV
        env:
          DATABASE_URL: ${{secrets.DATABASE_URL}}

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run API Collector
        run: python DataCollector/apiCollector.py



